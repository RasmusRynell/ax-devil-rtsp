name: Test & Publish

on:
  push:
    branches: [ main ]
    tags: [ "v*" ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.10', '3.11' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Re‑use wheels between workflow runs to avoid rebuilding PyGObject each time
      - name: Cache pip wheels
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-

      - name: Install system libraries (headers + GStreamer)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgirepository1.0-dev \
            libcairo2-dev \
            pkg-config \
            gcc \
            gstreamer1.0-dev \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            gstreamer1.0-plugins-bad \
            gstreamer1.0-plugins-ugly \
            gstreamer1.0-libav \
            gstreamer1.0-tools

      - name: Build PyGObject and project dependencies
        run: |
          python -m pip install --upgrade pip
          # Build the bindings for the *current* interpreter
          pip install pycairo
          pip install PyGObject
          # Project‑specific dependencies
          if [ -f requirements.txt ];      then pip install -r requirements.txt      ; fi
          if [ -f requirements-dev.txt ];  then pip install -r requirements-dev.txt  ; fi
          pip install -e .

      - name: Run tests
        run: USE_REAL_CAMERA=false pytest tests/ -v

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip wheels
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-3.11-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-3.11-pip-

      - name: Install system libraries (headers + GStreamer)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgirepository1.0-dev \
            libcairo2-dev \
            pkg-config \
            gcc \
            gstreamer1.0-dev \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            gstreamer1.0-plugins-bad \
            gstreamer1.0-plugins-ugly \
            gstreamer1.0-libav \
            gstreamer1.0-tools

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pycairo PyGObject
          pip install build twine

      - name: Build and check package
        run: |
          python -m build
          twine check dist/*

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
